# Generated by Django 3.1.3 on 2020-11-30 16:26

import datetime
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blogger',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.user')),
                ('profile_image', models.ImageField(blank=True, max_length=200, null=True, upload_to='bloggers-images')),
                ('gender', models.CharField(blank=True, max_length=100, null=True)),
                ('group_status', models.CharField(blank=True, choices=[('VIEWER', 'Viewer'), ('BLOGGER', 'Blogger')], default='VIEWER', max_length=200, null=True)),
                ('is_user_active', models.CharField(blank=True, choices=[('DEACTIVATE', 'Deactivate'), ('ACTIVATE', 'Activate')], default='ACTIVATE', max_length=200, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('date_of_birth', models.DateField(default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('biography', models.TextField()),
            ],
            options={
                'verbose_name': 'Blogger',
                'verbose_name_plural': 'Bloggers',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('county_number', models.IntegerField()),
                ('county', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MainSocialMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('icon', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_image', models.ImageField(blank=True, max_length=200, null=True, upload_to='post-images')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(default='', editable=False, max_length=160)),
                ('post_verify', models.CharField(choices=[('ACTIVE', 'active'), ('INACTIVE', 'inactive')], default='INACTIVE', max_length=200)),
                ('blogger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogbackapp.blogger')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogbackapp.category')),
            ],
        ),
        migrations.CreateModel(
            name='PostTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogbackapp.category')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogbackapp.post')),
            ],
        ),
        migrations.CreateModel(
            name='PostLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('blogger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogbackapp.blogger')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogbackapp.post')),
            ],
        ),
        migrations.CreateModel(
            name='EditorsPick',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editor_status', models.CharField(blank=True, choices=[('INACTIVE', 'Inactive'), ('ACTIVE', 'Active')], default='ACTIVE', max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogbackapp.post')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('msg_content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('blogger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogbackapp.blogger')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogbackapp.post')),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='commentreply', to='blogbackapp.comment')),
            ],
        ),
        migrations.CreateModel(
            name='BloggerSocialMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('icon', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('blogger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogbackapp.blogger')),
            ],
        ),
        migrations.AddField(
            model_name='blogger',
            name='county',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='blogbackapp.county'),
        ),
    ]
